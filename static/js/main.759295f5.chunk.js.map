{"version":3,"sources":["main/ui/main-components/Login/Login.module.css","main/ui/main-components/ForgotPassword/ForgotPassword.module.css","main/ui/common/Modal/ModalWindowWith2Buttons.module.css","main/ui/main-components/Cards/Cards.module.css","main/ui/main-components/Learn/Learn.module.css","main/ui/main-components/Header/Header.module.css","main/ui/main-components/Profile/Profile.module.css","main/ui/common/Input/Input.module.css","main/ui/common/Button/Button.module.css","main/ui/main-components/Register/Register.module.css","main/ui/main-components/Profile/Profile.tsx","main/ui/common/Input/Input.tsx","main/ui/common/Button/Button.tsx","main/dal/api-login.ts","main/bll/login-reducer.ts","main/ui/main-components/Login/Login.tsx","main/dal/api-register.ts","main/bll/register-reducer.ts","main/ui/main-components/Register/Register.tsx","main/dal/api-forgot-password.ts","main/bll/forgot-password-reducer.ts","main/ui/main-components/ForgotPassword/ForgotPassword.tsx","main/dal/api-table-packs.ts","main/bll/packs-reducer.ts","main/ui/common/Modal/ModalWindowWith2Inputs.tsx","main/ui/common/Modal/ModalWindowWith2Buttons.tsx","main/ui/common/Modal/ModalWindowWith1Input.tsx","main/ui/main-components/TablePacks/TablePacks.tsx","main/ui/common/Table/Table.tsx","main/dal/api-cards.ts","main/bll/cards-reducer.ts","main/ui/common/Table/EditMenu.tsx","main/ui/main-components/Cards/Cards.tsx","main/dal/api-learn.ts","main/bll/learn-reducer.ts","main/ui/main-components/Learn/Learn.tsx","main/ui/main-components/Routes/Routes.tsx","main/ui/main-components/Header/Header.tsx","main/ui/App.tsx","serviceWorker.ts","main/bll/profile-reducer.ts","main/bll/store.ts","index.tsx","main/ui/common/Modal/ModalWindowWith2Inputs.module.css","main/ui/common/Table/Table.module.css"],"names":["module","exports","Profile","className","styles","profile","Input","React","memo","props","inputContainer","type","placeholder","value","onChange","e","onChangeFunc","currentTarget","Button","button","onClick","onClickFunc","name","instance","axios","create","baseURL","loginApi","userData","post","then","res","data","initialState","email","token","error","isAuth","setIsAuth","loginReducer","state","action","Login","useState","setLogin","password","setPassword","rememberMe","setRememberMe","dispatch","useDispatch","useSelector","store","login","document","cookie","useEffect","onRememberMeChange","useCallback","checked","setData","userLoginData","success","catch","response","to","apiRegister","NewUser","REGISTER","isAdmin","_id","newUserData","addedUser","alert","registerReducer","Register","setNewEmail","repeatPassword","setRepeatPassword","register","forgotPassApi","resetPassData","forgotPasswordReducer","ForgotPassword","setEmail","forgotPassword","resetSuccess","resetPass","html1","html2","resetPassword","container","apiTablePacks","get","newPackName","cardsPack","split","idPack","delete","changedPackName","id","put","ADD_NEW_PACK","DELETE_PACK","CHANGE_PACK_NAME","cardPacks","AddPackCard","newPack","NewPack","newCardsPack","ChangePackName","updatedCardsPack","DeletePackCard","DeletedPack","deletedCardsPack","packsOfCardsReducer","allPacksCards","filter","p","map","ModalWindowWithTwoInputs","firstValue","setFirstValue","secondValue","setSecondValue","style","backgroundStyle","main","forButton","addItemFunction","cancelFunction","ModalWindowWithTwoButton","nameItem","confirmFunction","idItem","ModalWindowWithOneInput","MainTable","currentId","setCurrentId","isHiddenForChangeNamePack","SetIsHiddenForChangeNamePack","changeNamePackStatusTrue","isHiddenForAddPacks","setIsHiddenForAddPacks","changeForAddPacksStatusTrue","isHiddenForDeletePacks","setIsHiddenForDeletePacks","changeForDeletePacksStatusTrue","columns","title","dataIndex","key","Packs","packsOfCards","deletePack","changeName","dataOfPacks","c","PACKS_TABLE","created","update","updated","buttons","pack","dataSource","Table","header","m","index","rows","items","item","row","cell","render","cardsApi","packId","question","answer","card","cardsPack_id","cardId","cards","getCards","console","log","cardsReducer","EditMenu","display","justifyContent","width","updateButtonCallback","deleteButtonCallback","Cards","dataItem","grade","setIsDeleteModalHidden","setCardId","setIsUpdateModalHidden","isAddModalHidden","setIsAddModalHidden","isUpdateModalHidden","isDeleteModalHidden","useParams","onAddCardClick","newCard","addCard","onDeleteCardClick","deleteCardsSuccess","deleteCard","onUpdateCardClick","updatedCard","updateCard","addButton","learnsApi","card_id","updateGradeSuccess","isError","cardToShow","rating","shots","__v","setGradeSuccess","setGradeError","getCardToShowSuccess","getCard","sum","reduce","acc","rand","Math","random","i","newSum","Learn","isChecked","setIsChecked","isFirstRender","setIsFirstRender","allCards","learn","gradeSuccess","gradeError","length","onSetGradeClick","setGrade","color","CARDS_TABLE","Routes","routes","path","exact","Header","App","Boolean","window","location","hostname","match","profileReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.759295f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1NqhM\",\"rememberMe\":\"Login_rememberMe__1lr5L\",\"error\":\"Login_error__14-O5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ForgotPassword_container__26ACj\",\"error\":\"ForgotPassword_error__3xppo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundStyle\":\"ModalWindowWith2Buttons_backgroundStyle__3KsK1\",\"main\":\"ModalWindowWith2Buttons_main__2a5jG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2myC_\",\"addButton\":\"Cards_addButton__37f7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Learn_container__3BaaX\",\"answer\":\"Learn_answer__3Z5Oa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3xS8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3k0ZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__2rvjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3zEY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__2no2n\"};","import React from \"react\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport Input from \"../../common/Input/Input\";\r\nimport styles from \"./Profile.module.css\"\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className={styles.profile}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport styles from \"./Input.module.css\";\n\ntype InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n    & {onChangeFunc: (value: string) => void };\n\nconst Input = React.memo((props: InputPropsType) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onChangeFunc(e.currentTarget.value);\n    };\n\n    return (\n        <div className={styles.inputContainer}>\n            <input type={props.type} placeholder={props.placeholder} value={props.value} onChange={onChange}/>\n        </div>\n    );\n});\n\nexport default Input;","import React from \"react\";\r\nimport styles from \"./Button.module.css\"\r\n\r\ntype PropsType = {\r\n    name: string;\r\n    onClickFunc: () => void;\r\n};\r\n\r\nconst Button = (props: PropsType) => {\r\n    return (\r\n        <button className={styles.button} onClick={props.onClickFunc}>{props.name}</button>\r\n    )\r\n};\r\n\r\nexport default Button;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/auth\"\r\n});\r\n\r\nexport type UserLoginType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n};\r\n\r\ntype UserDataResponse = {\r\n    email: string;\r\n    name: string;\r\n    isAdmin: boolean;\r\n    rememberMe: boolean;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n    __v: number;\r\n    _id: string;\r\n    success: boolean;\r\n    error: string;\r\n};\r\n\r\nexport const loginApi = {\r\n    userLogin(userData: UserLoginType) {\r\n        return instance.post<UserDataResponse>(\"/login\", userData).then(res => res.data)\r\n    }\r\n};","import {loginApi, UserLoginType} from \"../dal/api-login\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst USER_LOGIN = \"USER-LOGIN\";\r\nconst SET_ERROR = \"SET-ERROR\";\r\nconst SET_IS_AUTH = \"SET-IS-AUTH\";\r\nconst SET_TOKEN = \"SET-TOKEN\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    name: \"\",\r\n    token: \"\",\r\n    error: \"\",\r\n    isAuth: false\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst loginReducer = (state: initialStateType = initialState, action: LoginActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            return {...state, ...action.userData};\r\n        case SET_ERROR:\r\n            return {...state, error: action.error};\r\n        case SET_IS_AUTH:\r\n            return {...state, isAuth: action.isAuth};\r\n        case SET_TOKEN:\r\n            return {...state, token: action.token};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype LoginActionType = UserLoginSuccessType | SetErrorType | SetIsAuthType | SetTokenType;\r\n\r\ntype SetTokenType = {type: typeof SET_TOKEN; token: string}\r\nexport const setToken = (token: string) => ({type: SET_TOKEN, token});\r\n\r\ntype UserDataType = {\r\n    email: string;\r\n    name: string;\r\n    token: string;\r\n}\r\ntype UserLoginSuccessType = { type: typeof USER_LOGIN; userData: UserDataType };\r\nconst userLoginSuccess = (userData: UserDataType): UserLoginSuccessType => ({type: USER_LOGIN, userData});\r\n\r\ntype SetErrorType = { type: typeof SET_ERROR; error: string };\r\nconst setError = (error: string): SetErrorType => ({type: SET_ERROR, error});\r\n\r\ntype SetIsAuthType = {type: typeof SET_IS_AUTH; isAuth: boolean};\r\nexport const setIsAuth = (isAuth: boolean): SetIsAuthType => ({type: SET_IS_AUTH, isAuth});\r\n\r\nexport const userLogin = (userLoginData: UserLoginType) => (dispatch: Dispatch<LoginActionType>) => {\r\n    loginApi.userLogin(userLoginData)\r\n        .then(res => {\r\n            if (res.success) {\r\n                dispatch(userLoginSuccess({\r\n                    email: res.email,\r\n                    name: res.name,\r\n                    token: res.token\r\n                }));\r\n                dispatch(setIsAuth(true));\r\n                document.cookie=`token=${res.token}`;\r\n            }\r\n        })\r\n        .catch(res => {\r\n            dispatch(setError(res.response.data.error));\r\n            dispatch(setIsAuth(false));\r\n        })\r\n};\r\n\r\nexport default loginReducer;","import React, {ChangeEvent, useCallback, useEffect, useState} from \"react\";\nimport styles from \"./Login.module.css\"\nimport Input from \"../../common/Input/Input\";\nimport Button from \"../../common/Button/Button\";\nimport {setIsAuth, userLogin} from \"../../../bll/login-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../../bll/store\";\nimport {Redirect} from \"react-router-dom\";\n\nconst Login = () => {\n    const [email, setLogin] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\n\n    const dispatch = useDispatch();\n    const error = useSelector((store: AppStateType) => store.login.error);\n    const isAuth = useSelector((store: AppStateType) => store.login.isAuth);\n\n    const token = document.cookie;\n    useEffect(\n        () => {\n            if (token) {\n                dispatch(setIsAuth(true));\n            }\n        }, [token, dispatch]);\n\n    const onRememberMeChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            setRememberMe(e.currentTarget.checked);\n        },\n        [setRememberMe]\n    );\n\n    const setData = useCallback(\n        () => {\n            dispatch(userLogin({email, password, rememberMe}));\n        },\n        [email, password, rememberMe, dispatch]\n    );\n\n    if (isAuth) return <Redirect to={\"/profile\"}/>;\n    return (\n\n        <div className={styles.login}>\n            <div>Sign In</div>\n            <Input type={\"email\"} placeholder={\"Login\"} onChangeFunc={setLogin} value={email}/>\n            <Input type={\"password\"} placeholder={\"Password\"} onChangeFunc={setPassword} value={password}/>\n            {\n                error && <span className={styles.error}>{error}</span>\n            }\n            <div className={styles.rememberMe}>\n                <input type={\"checkbox\"} onChange={onRememberMeChange} checked={rememberMe}/>\n                <span>remember me</span>\n            </div>\n            <Button name={\"Login\"} onClickFunc={setData}/>\n        </div>\n    );\n};\n\nexport default Login;\n","import axios from \"axios\";\r\n\r\nconst baseURL = `https://cards-nya-back.herokuapp.com/1.0/`;\r\nconst instance = axios.create({\r\n    baseURL: baseURL\r\n});\r\n\r\nexport type NewUserType = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ntype NewUserResponse = {\r\n    addedUser: {\r\n        email: string,\r\n        isAdmin: boolean,\r\n        __v: number,\r\n        _id: string\r\n    },\r\n    success: true\r\n}\r\n\r\nexport const apiRegister = {\r\n    addNewUser(NewUser: NewUserType) {\r\n        return instance.post<NewUserResponse>(`auth/register`, NewUser)\r\n    }\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {apiRegister, NewUserType} from \"../dal/api-register\";\r\n\r\nconst REGISTER = \"cards-nya/auth/REGISTER\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    isAdmin: false,\r\n    // __v: 1,\r\n    _id: \"\"\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\ntype addNewUserType = { type: string; addedUser: initialStateType };\r\n\r\nconst registerReducer = (state: initialStateType = initialState, action: addNewUserType): initialStateType => {\r\n    switch (action.type) {\r\n        case REGISTER: {\r\n            return {...state, ...action.addedUser}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst addNewUser = (addedUser: initialStateType): addNewUserType => ({type: REGISTER, addedUser});\r\n\r\nexport const NewUser = (newUserData: NewUserType) => (dispatch: Dispatch<addNewUserType>) => {\r\n     apiRegister.addNewUser(newUserData)\r\n        .then(res => {\r\n            if (res.data.success === true) {\r\n                dispatch(addNewUser(res.data.addedUser))\r\n            } else {\r\n                alert(\"some error\")\r\n            }\r\n        })\r\n        .catch(res => {\r\n            alert(\"error\")\r\n        })\r\n};\r\nexport default registerReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Register.module.css\"\r\nimport Input from \"../../common/Input/Input\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport {NewUser} from \"../../../bll/register-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [email, setNewEmail] = useState<string>(\"\");\r\n\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    const [repeatPassword, setRepeatPassword] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setNewUserData = (): void => {\r\n        if (password === repeatPassword) {\r\n            dispatch(NewUser({email, password}));\r\n            setNewEmail(\"\");\r\n            setPassword(\"\");\r\n            setRepeatPassword(\"\")\r\n        } else {\r\n            alert(\"Пароли не совпадают\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.register}>\r\n            <Input type={\"text\"} placeholder={\"e-mail\"} value={email} onChangeFunc={setNewEmail}/>\r\n            <Input type={\"password\"} placeholder={\"Password\"} value={password} onChangeFunc={setPassword}/>\r\n            <Input type={\"password\"} placeholder={\"Repeat password\"} value={repeatPassword}\r\n                   onChangeFunc={setRepeatPassword}/>\r\n            <Button name={\"Register\"} onClickFunc={setNewUserData}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/auth\"\r\n});\r\n\r\nexport type ResetPassType = {\r\n    email: string;\r\n    html1: string;\r\n    html2: string;\r\n};\r\n\r\nexport const forgotPassApi = {\r\n    resetPass(resetPassData: ResetPassType) {\r\n        return instance.post<{success: boolean}>(\"/forgot\", resetPassData).then(res => res.data)\r\n    }\r\n};","import {Dispatch} from \"redux\";\r\nimport {forgotPassApi} from \"../dal/api-forgot-password\";\r\n\r\nconst RESET_PASSWORD = \"USER-LOGIN\";\r\nconst SET_ERROR = \"SET-ERROR\";\r\n\r\nconst initialState = {\r\n    success: false,\r\n    error: \"\"\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst forgotPasswordReducer = (state: initialStateType = initialState, action: ForgotPasswordActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case RESET_PASSWORD:\r\n            return {...state, success: action.success};\r\n        case SET_ERROR:\r\n            return {...state, error: action.error};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ForgotPasswordActionType = ResetPasswordSuccessType | SetErrorType;\r\n\r\ntype ResetPasswordSuccessType = { type: typeof RESET_PASSWORD; success: boolean };\r\nconst resetPasswordSuccess = (success: boolean): ResetPasswordSuccessType => ({type: RESET_PASSWORD, success});\r\n\r\ntype SetErrorType = { type: typeof SET_ERROR; error: string };\r\nconst setError = (error: string): SetErrorType => ({type: SET_ERROR, error});\r\n\r\nexport const resetPassword = (email: string) => (dispatch: Dispatch<ForgotPasswordActionType>) => {\r\n    const resPassData = {\r\n        email,\r\n        html1: \"<a href='http://localhost:3000/cards-nya#/forgot-password/'\",\r\n        html2: \">reset-password</a>\"\r\n    };\r\n    forgotPassApi.resetPass(resPassData)\r\n        .then(res => {\r\n            if (res.success) {\r\n                dispatch(resetPasswordSuccess(res.success));\r\n            }\r\n        })\r\n        .catch(res => {\r\n            dispatch(setError(res.response.data.error));\r\n        })\r\n};\r\n\r\nexport default forgotPasswordReducer;","import React, {useCallback, useState} from \"react\";\r\nimport styles from \"./ForgotPassword.module.css\"\r\nimport Input from \"../../common/Input/Input\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {resetPassword} from \"../../../bll/forgot-password-reducer\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const error = useSelector((store: AppStateType) => store.forgotPassword.error);\r\n    const resetSuccess = useSelector((store: AppStateType) => store.forgotPassword.success);\r\n\r\n    const resetPass = useCallback(\r\n        () => {\r\n            dispatch(resetPassword(email))\r\n        }, [email, dispatch]\r\n    );\r\n\r\n    if (resetSuccess) return <Redirect to={\"/set-new-password\"}/>;\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div>Forgot Password</div>\r\n            <Input onChangeFunc={setEmail} value={email} type={\"email\"} placeholder={\"your e-mail\"}/>\r\n            {\r\n                error && <span className={styles.error}>{error}</span>\r\n            }\r\n            <Button name={\"Send\"} onClickFunc={resetPass}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = `https://cards-nya-back.herokuapp.com/1.0/`;\r\nconst instance = axios.create({\r\n    baseURL: baseURL\r\n});\r\n\r\nexport type Pack = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: 0\r\n}\r\n\r\nexport type ResponseAllPacks = {\r\n    cardPacks: Array<Pack>\r\n    cardPacksTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nexport type ResponseAddPacks = {\r\n    newCardsPack: Pack\r\n    success: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type ResponseDeletePacks = {\r\n    deletedCardsPack: Pack\r\n    success: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport  type ResponseChangeNameType = {\r\n    updatedCardsPack: Pack\r\n    success: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport const apiTablePacks = {\r\n    loadingCardsPack() {\r\n        return instance.get<ResponseAllPacks>(`cards/pack?${document.cookie}&pageCount=1000`)\r\n    },\r\n    addCardsPack(newPackName: string) {\r\n        return instance.post<ResponseAddPacks>(`cards/pack`, {\r\n            cardsPack: {\r\n                name: newPackName\r\n            }, token: document.cookie.split(\"=\")[1]\r\n        })\r\n    },\r\n    deleteCardsPack(idPack: string) {\r\n        return instance.delete<ResponseDeletePacks>(`cards/pack?${document.cookie}&id=${idPack}`)\r\n    },\r\n    changeCardsPackName(changedPackName: string, id: string) {\r\n        return instance.put<ResponseChangeNameType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id: id,\r\n                name: changedPackName\r\n            }, token: document.cookie.split(\"=\")[1]\r\n        })\r\n    },\r\n};\r\n","import {apiTablePacks, Pack} from \"../dal/api-table-packs\";\r\nimport {Dispatch} from \"redux\";\r\nimport {resolveAny} from \"dns\";\r\n\r\nconst LOADING_PACKS_OF_CARDS = \"cards-nya/packs/LOADING_PACKS_OF_CARDS\";\r\nconst ADD_NEW_PACK = \"cards-nya/packs/ADD_NEW_PACK\";\r\nconst DELETE_PACK = \"cards-nya/packs/DELETE_PACK\";\r\nconst CHANGE_PACK_NAME = \"cards-nya/packs/CHANGE_PACK_NAME\";\r\n\r\n\r\nconst initialState = {\r\n    cardPacks: [\r\n        // {\r\n        //     _id: \"333\",\r\n        //     user_id: \"5eb543f6bea3ad21480f1ee7\",\r\n        //     name: \"no Name\",\r\n        //     path: \"/def\", // папка\r\n        //     grade: 0, // средняя оценка карточек\r\n        //     shots: 0,// количество попыток\r\n        //     rating: 0, // лайки\r\n        //     type: \"pack\",// ещё будет \"folder\" (папка)\r\n        //     created: \"2020-05-09T15:40:40.339Z\",\r\n        //     updated: \"2020-05-09T15:40:40.339B\",\r\n        //     __v: 0\r\n        // },\r\n        // {\r\n        //     _id: \"334\",\r\n        //     user_id: \"5eb543f6bea3ad21480f1ee7\",\r\n        //     name: \"no Name\",\r\n        //     path: \"/def\", // папка\r\n        //     grade: 0, // средняя оценка карточек\r\n        //     shots: 0,// количество попыток\r\n        //     rating: 0, // лайки\r\n        //     type: \"pack\",// ещё будет \"folder\" (папка)\r\n        //     created: \"2020-05-09T15:40:40.339Z\",\r\n        //     updated: \"2020-05-09T15:40:40.339A\",\r\n        //     __v: 0\r\n        // }\r\n\r\n    ] as Array<Pack>\r\n    // cardPacksTotalCount: 14, // количество колод\r\n    // maxGrade: 4.824320858778307,\r\n    // minGrade: 0,\r\n    // page: 1, // выбранная страница\r\n    // pageCount: 4 ,// количество элементов на странице\r\n    // token: \"572e99e0-9439-11ea-a15d-c9ae497710ee\",\r\n    // tokenDeathTime: 1589289258495\r\n};\r\ntype initialStateType = typeof initialState;\r\n\r\ntype CommonPacksType =\r\n    LoadingTableCardsType\r\n    | AddNewPackType\r\n\r\n// reducer\r\n\r\nconst packsOfCardsReducer = (state: initialStateType = initialState, action: any): initialStateType => { //////исправить action!!!!\r\n    switch (action.type) {\r\n        case LOADING_PACKS_OF_CARDS: {\r\n            return {\r\n                ...state,\r\n                cardPacks: action.allPacksCards\r\n            }\r\n        }\r\n        case ADD_NEW_PACK: {\r\n            return {\r\n                ...state,\r\n                cardPacks: [action.NewPack, ...state.cardPacks]\r\n            }\r\n        }\r\n        case DELETE_PACK: {\r\n            return {\r\n                ...state,\r\n                cardPacks: state.cardPacks.filter(p => p._id !== action.DeletedPack._id)\r\n            }\r\n        }\r\n        case CHANGE_PACK_NAME: {\r\n            return {\r\n                ...state,\r\n                cardPacks: state.cardPacks.map(p => {\r\n                    if (action.updatedCardsPack._id !== p._id) {\r\n                        return p\r\n                    } else return {...p, name: action.updatedCardsPack.name}\r\n                })\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// ActionCreators\r\n\r\ntype LoadingTableCardsType = {\r\n    type: string\r\n    allPacksCards: Array<Pack>\r\n}\r\ntype AddNewPackType = {\r\n    type: string\r\n    NewPack: Pack\r\n}\r\ntype ChangePackNameType = {\r\n    type: string\r\n    updatedCardsPack: Pack\r\n}\r\ntype DeletedPackType = {\r\n    type: string\r\n    DeletedPack: Pack\r\n}\r\n\r\n\r\nconst loadingTableCardsAC = (allPacksCards: Array<Pack>): LoadingTableCardsType => ({\r\n    type: LOADING_PACKS_OF_CARDS,\r\n    allPacksCards\r\n});\r\n\r\nconst changePackNameAC = (updatedCardsPack: Pack): ChangePackNameType => ({\r\n    type: CHANGE_PACK_NAME,\r\n    updatedCardsPack\r\n});\r\n\r\nconst addNewPackAC = (NewPack: Pack): AddNewPackType => ({\r\n    type: ADD_NEW_PACK,\r\n    NewPack\r\n});\r\n\r\nconst deletePackAC = (DeletedPack: Pack): DeletedPackType => ({\r\n    type: DELETE_PACK,\r\n    DeletedPack\r\n});\r\n\r\n\r\n// Thunk\r\nexport const LoadingPacksCards = () => (dispatch: Dispatch) => {\r\n    return apiTablePacks.loadingCardsPack()\r\n        .then(res => {\r\n            dispatch(loadingTableCardsAC(res.data.cardPacks));\r\n            document.cookie = `token=${res.data.token}`;\r\n        })\r\n};\r\n\r\nexport const AddPackCard = (newPack: string) => (dispatch: Dispatch) => {\r\n    return apiTablePacks.addCardsPack(newPack)\r\n        .then(res => {\r\n            dispatch(addNewPackAC(res.data.newCardsPack));\r\n            document.cookie = `token=${res.data.token}`;\r\n        })\r\n};\r\n\r\nexport const ChangePackName = (changedPackName: string, id: string) => (dispatch: Dispatch) => {\r\n    return apiTablePacks.changeCardsPackName(changedPackName, id)\r\n        .then(res => {\r\n            dispatch(changePackNameAC(res.data.updatedCardsPack));\r\n            document.cookie = `token=${res.data.token}`;\r\n        })\r\n};\r\n\r\nexport const DeletePackCard = (idPack: string) => (dispatch: Dispatch) => {\r\n    return apiTablePacks.deleteCardsPack(idPack)\r\n        .then(res => {\r\n            dispatch(deletePackAC(res.data.deletedCardsPack));\r\n            document.cookie = `token=${res.data.token}`;\r\n        })\r\n};\r\n\r\n\r\nexport default packsOfCardsReducer;","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from './ModalWindowWith2Inputs.module.css'\r\n\r\ntype  ModalWindowWithTwoInputs={\r\n    name:string\r\n    placeholder:string\r\n    cancelFunction:()=>void\r\n    addItemFunction:(firstValue:string, secondValue: string)=>void\r\n\r\n}\r\n\r\nconst ModalWindowWithTwoInputs:React.FC<ModalWindowWithTwoInputs> = (props) => {\r\n\r\n\r\n    const [firstValue, setFirstValue] = useState<string>('');\r\n    const onChangeFirstInput = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setFirstValue(e.currentTarget.value)\r\n    };\r\n\r\n\r\n    const [secondValue, setSecondValue] = useState<string>('');\r\n    const onChangeSecondInput = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setSecondValue(e.currentTarget.value)\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={style.backgroundStyle}>\r\n            </div>\r\n            <div className={style.main}>\r\n                <input type=\"text\" value={firstValue} placeholder={props.placeholder} onChange={onChangeFirstInput}/>\r\n                <input type=\"text\" value={secondValue} onChange={onChangeSecondInput}/>\r\n                <div className={style.forButton}>\r\n                    <button onClick={()=>props.addItemFunction(firstValue, secondValue)}>{props.name}</button>\r\n                    <button onClick={props.cancelFunction}>CANCEL</button>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n};\r\nexport default ModalWindowWithTwoInputs","import React, {useState} from \"react\";\r\nimport style from './ModalWindowWith2Buttons.module.css'\r\n type ModalWindowWith2ButtonTypes={\r\n     confirmFunction:(idItem:string)=>void\r\n     cancelFunction:()=> void\r\n     nameItem:string\r\n     idItem:string\r\n\r\n }\r\n\r\nconst ModalWindowWithTwoButton:React.FC<ModalWindowWith2ButtonTypes> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={style.backgroundStyle}>\r\n            </div>\r\n            <div className={style.main}>\r\n                <span> {`Delete ${props.nameItem }?`} </span>\r\n                <div>\r\n                    <button onClick={()=>props.confirmFunction(props.idItem)}>Yes</button>\r\n                    <button onClick={props.cancelFunction}>No</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\nexport default ModalWindowWithTwoButton","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from './ModalWindowWith2Inputs.module.css'\r\n\r\ntype  ModalWindowWithTwoInputs = {\r\n    idItem: string\r\n    name: string\r\n    placeholder: string\r\n    cancelFunction: () => void\r\n    addItemFunction: (firstValue: string, idItem: string) => void\r\n\r\n}\r\n\r\nconst ModalWindowWithOneInput: React.FC<ModalWindowWithTwoInputs> = (props) => {\r\n\r\n\r\n    const [firstValue, setFirstValue] = useState<string>('');\r\n    const onChangeFirstInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFirstValue(e.currentTarget.value)\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={style.backgroundStyle}>\r\n            </div>\r\n            <div className={style.main}>\r\n                <input type=\"text\" value={firstValue} placeholder={props.placeholder} onChange={onChangeFirstInput}/>\r\n                <div className={style.forButton}>\r\n                    <button onClick={() => props.addItemFunction(firstValue, props.idItem)}>{props.name}</button>\r\n                    <button onClick={props.cancelFunction}>CANCEL</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n};\r\nexport default ModalWindowWithOneInput","import React, {useEffect, useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Table} from 'antd';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AddPackCard, ChangePackName, DeletePackCard, LoadingPacksCards} from \"../../../bll/packs-reducer\";\r\nimport {Pack} from '../../../dal/api-table-packs';\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport ModalWindowWithTwoInputs from \"../../common/Modal/ModalWindowWith2Inputs\";\r\nimport ModalWindowWithTwoButton from \"../../common/Modal/ModalWindowWith2Buttons\";\r\nimport ModalWindowWithOneInput from \"../../common/Modal/ModalWindowWith1Input\";\r\nimport {PACKS_TABLE} from \"../Routes/Routes\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst MainTable: React.FC = () => {\r\n\r\n    const [currentId, setCurrentId] = useState<string>(''); // текущий ID элемента на к-м произошел OnClick\r\n\r\n    //State и функции для модального окна по смене названия колоды\r\n    const [isHiddenForChangeNamePack, SetIsHiddenForChangeNamePack] = useState<boolean>(true);\r\n    const changeNamePackStatusTrue = () => {\r\n        SetIsHiddenForChangeNamePack(true)\r\n    };\r\n    const changeNamePackStatusFalse = (id: string) => {\r\n        SetIsHiddenForChangeNamePack(false);\r\n        setCurrentId(id)\r\n    };\r\n\r\n\r\n    //State и функции для модального окна по добавлению колоды\r\n    const [isHiddenForAddPacks, setIsHiddenForAddPacks] = useState<boolean>(true);\r\n    const changeForAddPacksStatusFalse = () => {\r\n        setIsHiddenForAddPacks(false)\r\n    };\r\n    const changeForAddPacksStatusTrue = () => {\r\n        setIsHiddenForAddPacks(true)\r\n    };\r\n\r\n    //State и функции для модального окна по удалению колоды\r\n    const [isHiddenForDeletePacks, setIsHiddenForDeletePacks] = useState<boolean>(true);\r\n    const changeForDeletePacksStatusFalse = (id: string) => {\r\n        setIsHiddenForDeletePacks(false);\r\n        setCurrentId(id)\r\n    };\r\n    const changeForDeletePacksStatusTrue = () => {\r\n        setIsHiddenForDeletePacks(true)\r\n    };\r\n\r\n\r\n    // столбцы для таблицы\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Created',\r\n            dataIndex: 'created',\r\n        },\r\n        {\r\n            title: 'Updated',\r\n            dataIndex: 'update',\r\n        },\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: <button onClick={changeForAddPacksStatusFalse}>ADD</button>,\r\n            dataIndex: 'buttons',\r\n        },\r\n    ];\r\n\r\n\r\n    const Packs = useSelector((store: AppStateType) => store.packsOfCards.cardPacks);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(LoadingPacksCards())\r\n        }, []\r\n    );\r\n\r\n    // удаление колоды\r\n    const deletePack = (idPack: string): void => {\r\n        dispatch(DeletePackCard(idPack));\r\n        changeForDeletePacksStatusTrue()\r\n    };\r\n    // добавление колоды\r\n    const addNewPack = (firstValue: string): void => {\r\n        dispatch(AddPackCard(firstValue));\r\n        changeForAddPacksStatusTrue()\r\n    };\r\n    // изменение имени колоды\r\n    const changeName = (firstValue: string, currentId: string): void => {\r\n        dispatch(ChangePackName(firstValue, currentId));\r\n        changeNamePackStatusTrue()\r\n    };\r\n\r\n    // data для колоды\r\n    const dataOfPacks = Packs.map((c: Pack) => {\r\n        return {\r\n            id: c._id,\r\n            key: c._id,\r\n            name: <NavLink to={`${PACKS_TABLE}/cards/${c._id}`}>{c.name}</NavLink>,\r\n            created: c.created,\r\n            update: c.updated,\r\n            buttons: <div>\r\n                <button onClick={() => changeNamePackStatusFalse(c._id)}>update</button>\r\n                <button onClick={() => changeForDeletePacksStatusFalse(c._id)}>delete</button>\r\n                <button><NavLink to={`/learn/${c._id}`}>learn</NavLink></button>\r\n            </div>,\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            {dataOfPacks.map(pack => {                                           // модальное окно для удаления колоды\r\n                if (!isHiddenForDeletePacks && pack.id === currentId) {\r\n                    return <ModalWindowWithTwoButton key={pack.key}\r\n                                                     cancelFunction={changeForDeletePacksStatusTrue}\r\n                                                     nameItem={'pack'}\r\n                                                     idItem={pack.id}\r\n                                                     confirmFunction={deletePack}/>\r\n                } else {\r\n                    return null\r\n                }\r\n            })}\r\n\r\n            {!isHiddenForAddPacks                                                       // окно для добавления колоды\r\n                ? <ModalWindowWithTwoInputs name={'ADD'} placeholder={'namePack'}\r\n                                            cancelFunction={changeForAddPacksStatusTrue}\r\n                                            addItemFunction={addNewPack}\r\n                />\r\n                : null\r\n            }\r\n\r\n            {dataOfPacks.map(pack => {                                              // окно для изменения имени колоды\r\n                if (!isHiddenForChangeNamePack && pack.id === currentId) {\r\n                    return <ModalWindowWithOneInput name={'CHANGE'}\r\n                                                    placeholder={'newNamePack'}\r\n                                                    key={pack.key}\r\n                                                    cancelFunction={changeNamePackStatusTrue}\r\n                                                    idItem={pack.id}\r\n                                                    addItemFunction={changeName}/>\r\n                } else {\r\n                    return null\r\n                }\r\n            })}\r\n\r\n            <Table columns={columns} dataSource={dataOfPacks}   /* таблица с входными данными для отрисовки*//>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MainTable;\r\n\r\n\r\n","import React, {ReactNode} from \"react\";\r\nimport styles from \"./Table.module.css\"\r\nimport {CardType} from \"../../../dal/api-cards\";\r\n\r\nexport type TableModelType = {\r\n    title: string;\r\n    render: (dataItem: CardType) => ReactNode;\r\n};\r\n\r\ntype TablePropsType = {\r\n    columns: Array<TableModelType>;\r\n    items: Array<CardType>;\r\n};\r\n\r\nconst Table = (props: TablePropsType) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                {props.columns.map((m, index) => <div key={index}>{m.title}</div>)}\r\n            </div>\r\n            <div className={styles.rows}>\r\n                {props.items.map((item) => {\r\n                    return <div key={item._id} className={styles.row}>\r\n                        {props.columns.map((m, index) => {\r\n                            return (\r\n                                <div key={index} className={styles.cell}>\r\n                                    {m.render(item)}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Table;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0\"\r\n});\r\n\r\nexport type CardType = {\r\n    answer: string;\r\n    question: string;\r\n    cardsPack_id: string;\r\n    grade: number;\r\n    rating: number;\r\n    shots: number;\r\n    type: string;\r\n    created: string;\r\n    updated: string;\r\n    __v: number;\r\n    _id: string;\r\n}\r\n\r\ntype GetCardsResponseType = {\r\n    cards: Array<CardType>;\r\n    cardsTotalCount: number;\r\n    maxGrade: number;\r\n    minGrade: number;\r\n    page: number;\r\n    pageCount: number;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n};\r\n\r\ntype PostCardResponseType = {\r\n    newCard: CardType;\r\n    success: boolean;\r\n    token: string;\r\n};\r\n\r\ntype DeleteCardResponseType = {\r\n    deletedCard: CardType;\r\n    success: boolean;\r\n    token: string;\r\n};\r\n\r\ntype UpdateCardResponseType = {\r\n    updatedCard: CardType;\r\n    success: boolean;\r\n    token: string;\r\n};\r\n\r\nexport const cardsApi = {\r\n    getCards(id: string) {\r\n        return instance.get<GetCardsResponseType>(`/cards/card?cardsPack_id=${id}&${document.cookie}`)\r\n            .then(res => res.data);\r\n    },\r\n    addCard(packId: string, question: string, answer: string) {\r\n        return instance.post<PostCardResponseType>(`/cards/card`, {\r\n            card:\r\n                {\r\n                    cardsPack_id: packId,\r\n                    question,\r\n                    answer\r\n                },\r\n            token: document.cookie.split(\"=\")[1]\r\n        }).then(res => res.data);\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete<DeleteCardResponseType>(`/cards/card?${document.cookie}&id=${cardId}`)\r\n            .then(res => res.data)\r\n    },\r\n    updateCard(cardId: string, question: string, answer: string) {\r\n        return instance.put<UpdateCardResponseType>(`/cards/card`, {\r\n            card: {\r\n                _id: cardId,\r\n                question,\r\n                answer\r\n            },\r\n            token: document.cookie.split(\"=\")[1]\r\n        }).then(res => res.data)\r\n    }\r\n};","import {Dispatch} from \"redux\";\r\nimport {CardType, cardsApi} from \"../dal/api-cards\";\r\n\r\nconst GET_CARDS = \"GET-CARDS\";\r\nconst ADD_CARD = \"ADD-CARD\";\r\nconst DELETE_CARD = \"DELETE-CARD\";\r\nconst UPDATE_CARD = \"UPDATE-CARD\";\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst cardsReducer = (state: initialStateType = initialState, action: CardsActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case GET_CARDS:\r\n            return {...state, cards: action.cards};\r\n        case ADD_CARD:\r\n            return {...state, cards: [action.card, ...state.cards]};\r\n        case DELETE_CARD:\r\n            return {...state, cards: state.cards.filter(card => action.cardId !== card._id)};\r\n        case UPDATE_CARD:\r\n            return {\r\n                ...state, cards: state.cards.map(card => {\r\n                    if (action.card._id === card._id) {\r\n                        return action.card\r\n                    } else {\r\n                        return card;\r\n                    }\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype CardsActionType = GetCardsSuccessType | AddCardSuccessType\r\n    | DeleteCardSuccessType | UpdateCardSuccessType;\r\n\r\ntype GetCardsSuccessType = { type: typeof GET_CARDS; cards: Array<CardType> };\r\nexport const getCardsSuccess = (cards: Array<CardType>): GetCardsSuccessType => ({type: GET_CARDS, cards});\r\n\r\ntype AddCardSuccessType = { type: typeof ADD_CARD, card: CardType };\r\nconst addCardsSuccess = (card: CardType): AddCardSuccessType => ({type: ADD_CARD, card});\r\n\r\ntype DeleteCardSuccessType = { type: typeof DELETE_CARD, cardId: string };\r\nconst deleteCardsSuccess = (cardId: string): DeleteCardSuccessType => ({type: DELETE_CARD, cardId});\r\n\r\ntype UpdateCardSuccessType = { type: typeof UPDATE_CARD, card: CardType };\r\nconst updateCardsSuccess = (card: CardType): UpdateCardSuccessType => ({type: UPDATE_CARD, card});\r\n\r\nexport const getCards = (id: string) => (dispatch: Dispatch<CardsActionType>) => {\r\n    cardsApi.getCards(id)\r\n        .then(res => {\r\n            dispatch(getCardsSuccess(res.cards));\r\n            document.cookie = `token=${res.token}`;\r\n        })\r\n        .catch(res => {\r\n            console.log(res);\r\n        })\r\n};\r\n\r\nexport const addCard = (packId: string, question: string, answer: string) =>\r\n    (dispatch: Dispatch<CardsActionType>) => {\r\n        cardsApi.addCard(packId, question, answer)\r\n            .then(res => {\r\n                if (res.success) {\r\n                    dispatch(addCardsSuccess(res.newCard));\r\n                    document.cookie = `token=${res.token}`;\r\n                }\r\n            })\r\n            .catch(res => {\r\n                console.log(res);\r\n            })\r\n    };\r\n\r\nexport const deleteCard = (cardId: string) => (dispatch: Dispatch<CardsActionType>) => {\r\n    cardsApi.deleteCard(cardId)\r\n        .then(res => {\r\n            if (res.success) {\r\n                dispatch(deleteCardsSuccess(cardId));\r\n                document.cookie = `token=${res.token}`;\r\n            }\r\n        })\r\n        .catch(res => {\r\n            console.log(res);\r\n        })\r\n};\r\n\r\nexport const updateCard = (cardId: string, question: string, answer: string) =>\r\n    (dispatch: Dispatch<CardsActionType>) => {\r\n        cardsApi.updateCard(cardId, question, answer)\r\n            .then(res => {\r\n                if (res.success) {\r\n                    dispatch(updateCardsSuccess(res.updatedCard));\r\n                    document.cookie = `token=${res.token}`;\r\n                }\r\n            })\r\n            .catch(res => {\r\n                console.log(res);\r\n            })\r\n    };\r\n\r\nexport default cardsReducer;","import Button from \"../Button/Button\";\r\nimport React from \"react\";\r\n\r\ntype EditMenuPropsType = {\r\n    id: string;\r\n    updateButtonCallback: () => void;\r\n    deleteButtonCallback: () => void;\r\n};\r\n\r\nexport const EditMenu = (props: EditMenuPropsType) => {\r\n    return (\r\n        <div style={{display: \"flex\", justifyContent: \"space-around\", width: \"100%\"}}>\r\n            <Button name={\"update\"} onClickFunc={props.updateButtonCallback}/>\r\n            <Button name={\"delete\"} onClickFunc={props.deleteButtonCallback}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditMenu;","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport Table, {TableModelType} from \"../../common/Table/Table\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport {CardType} from \"../../../dal/api-cards\";\r\nimport {addCard, deleteCard, getCards, updateCard} from \"../../../bll/cards-reducer\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport styles from \"./Cards.module.css\"\r\nimport EditMenu from \"../../common/Table/EditMenu\";\r\nimport {useParams, NavLink} from \"react-router-dom\";\r\nimport ModalWindowWithTwoInputs from \"../../common/Modal/ModalWindowWith2Inputs\";\r\nimport ModalWindowWithTwoButton from \"../../common/Modal/ModalWindowWith2Buttons\";\r\nimport Learn from \"../Learn/Learn\";\r\nimport {LEARN_CARD} from \"../Routes/Routes\";\r\n\r\ntype RouteParamsType = {\r\n    packId: string;\r\n};\r\n\r\nconst Cards = () => {\r\n    const columns: Array<TableModelType> = [\r\n        {\r\n            title: \"Question\",\r\n            render(dataItem: CardType) {\r\n                return <span>{dataItem.question}</span>\r\n            }\r\n        },\r\n        {\r\n            title: \"Answer\",\r\n            render(dataItem: CardType) {\r\n                return <span>{dataItem.answer}</span>\r\n            }\r\n        },\r\n        {\r\n            title: \"Grade\",\r\n            render(dataItem: CardType) {\r\n                return <span>{dataItem.grade}</span>\r\n            },\r\n        },\r\n        {\r\n            title: \"Edit\",\r\n            render(dataItem: CardType) {\r\n                return <EditMenu id={dataItem._id}\r\n                                 deleteButtonCallback={() => {\r\n                                     setIsDeleteModalHidden(false);\r\n                                     setCardId(dataItem._id);\r\n                                 }}\r\n                                 updateButtonCallback={() => {\r\n                                     setIsUpdateModalHidden(false);\r\n                                     setCardId(dataItem._id);\r\n                                 }}\r\n                />\r\n            },\r\n        }\r\n    ];\r\n\r\n    const [isAddModalHidden, setIsAddModalHidden] = useState<boolean>(true);\r\n    const [isUpdateModalHidden, setIsUpdateModalHidden] = useState<boolean>(true);\r\n    const [isDeleteModalHidden, setIsDeleteModalHidden] = useState<boolean>(true);\r\n    const [cardId, setCardId] = useState<string>(\"\");\r\n    const cards = useSelector((state: AppStateType) => state.cards.cards);\r\n    const dispatch = useDispatch();\r\n    const packId = useParams<RouteParamsType>().packId;\r\n\r\n    useEffect(() => {\r\n        dispatch(getCards(packId));\r\n    }, [packId, dispatch]);\r\n\r\n    const onAddCardClick = useCallback((question: string, answer: string) => {\r\n        dispatch(addCard(packId, question, answer));\r\n        setIsAddModalHidden(true);\r\n    }, [dispatch, packId]);\r\n\r\n    const onDeleteCardClick = useCallback((id: string) => {\r\n        dispatch(deleteCard(id));\r\n        setIsDeleteModalHidden(true);\r\n    }, [dispatch]);\r\n\r\n    const onUpdateCardClick = useCallback((cardId: string, question: string, answer: string) => {\r\n        dispatch(updateCard(cardId, question, answer));\r\n        setIsUpdateModalHidden(true)\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {!isAddModalHidden &&\r\n            <ModalWindowWithTwoInputs name={\"Add\"} placeholder={\"Question\"}\r\n                                      cancelFunction={() => setIsAddModalHidden(true)}\r\n                                      addItemFunction={onAddCardClick}/>}\r\n            {cards.map(card => {\r\n                if (!isDeleteModalHidden && cardId === card._id) {\r\n                    return <ModalWindowWithTwoButton confirmFunction={onDeleteCardClick}\r\n                                                     cancelFunction={() => setIsDeleteModalHidden(true)}\r\n                                                     nameItem={\"Card\"} idItem={card._id}\r\n                                                     key={card._id}\r\n                    />\r\n                } else if (!isUpdateModalHidden && cardId === card._id) {\r\n                    return <ModalWindowWithTwoInputs\r\n                        name={\"Update\"} placeholder={\"Question\"} key={card._id}\r\n                        cancelFunction={() => setIsUpdateModalHidden(true)}\r\n                        addItemFunction={(question, answer) => onUpdateCardClick(card._id, question, answer)}/>\r\n                } else {\r\n                    return null;\r\n                }\r\n            })}\r\n            <div className={styles.addButton}>\r\n                <Button name={\"Add Card\"} onClickFunc={() => setIsAddModalHidden(false)}/>\r\n            </div>\r\n            <Table columns={columns} items={cards}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cards;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0\"\r\n});\r\n\r\ntype SetGradeResponseType = {\r\n    updatedGrade: {\r\n        _id: string;\r\n        cardsPack_id: string;\r\n        card_id: string;\r\n        user_id: string;\r\n        grade: number;\r\n        shots: number;\r\n    },\r\n    token: string;\r\n};\r\n\r\nexport const learnsApi = {\r\n    setGrade(cardId: string, grade: number) {\r\n        return instance.put<SetGradeResponseType>(`/cards/grade`, {\r\n            token: document.cookie.split(\"=\")[1],\r\n            grade,\r\n            card_id: cardId\r\n        }).then(res => res.data)\r\n    }\r\n};","import {Dispatch} from \"redux\";\r\nimport {learnsApi} from \"../dal/api-learn\";\r\nimport {CardType} from \"../dal/api-cards\";\r\n\r\nconst UPDATE_GRADE_SUCCESS = \"UPDATE-GRADE-SUCCESS\";\r\nconst UPDATE_GRADE_ERROR = \"UPDATE-GRADE-ERROR\";\r\nconst GET_CARD_TO_SHOW = \"GET-CARD-TO-SHOW\";\r\n\r\nconst initialState = {\r\n    updateGradeSuccess: false,\r\n    isError: false,\r\n    cardToShow: {\r\n        answer: \"\",\r\n        question: \"\",\r\n        cardsPack_id: \"\",\r\n        grade: 0,\r\n        rating: 0,\r\n        shots: 0,\r\n        type: \"\",\r\n        created: \"\",\r\n        updated: \"\",\r\n        __v: 0,\r\n        _id: \"\",\r\n    }\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nexport const learnReducer = (state: initialStateType = initialState, action: LearnActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_GRADE_SUCCESS:\r\n            return {...state, updateGradeSuccess: action.success};\r\n        case UPDATE_GRADE_ERROR:\r\n            return {...state, isError: action.isError};\r\n        case GET_CARD_TO_SHOW:\r\n            return {...state, cardToShow: action.cardToShow};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype LearnActionType = SetGradeSuccessType | SetGradeErrorType | GetCardToShowSuccessType;\r\n\r\ntype SetGradeSuccessType = { type: typeof UPDATE_GRADE_SUCCESS; success: boolean };\r\nexport const setGradeSuccess = (success: boolean): SetGradeSuccessType => ({type: UPDATE_GRADE_SUCCESS, success});\r\n\r\ntype SetGradeErrorType = { type: typeof UPDATE_GRADE_ERROR; isError: boolean };\r\nexport const setGradeError = (isError: boolean): SetGradeErrorType => ({type: UPDATE_GRADE_ERROR, isError});\r\n\r\ntype GetCardToShowSuccessType = { type: typeof GET_CARD_TO_SHOW; cardToShow: CardType };\r\nexport const getCardToShowSuccess = (cardToShow: CardType): GetCardToShowSuccessType => ({\r\n    type: GET_CARD_TO_SHOW,\r\n    cardToShow\r\n});\r\n\r\nexport const setGrade = (cardId: string, grade: number) => (dispatch: Dispatch<LearnActionType>) => {\r\n    learnsApi.setGrade(cardId, grade)\r\n        .then(res => {\r\n            dispatch(setGradeSuccess(true));\r\n            document.cookie = `token=${res.token}`;\r\n        })\r\n        .catch(() => dispatch(setGradeError(true)));\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Learn.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport {\r\n    setGrade,\r\n    setGradeSuccess,\r\n    setGradeError,\r\n    getCardToShowSuccess\r\n} from \"../../../bll/learn-reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {CardType} from \"../../../dal/api-cards\";\r\nimport {getCards} from \"../../../bll/cards-reducer\";\r\n\r\nconst getCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    return cards[res.id + 1];\r\n};\r\n\r\n\r\ntype RouteParamsType = {\r\n    packId: string;\r\n};\r\n\r\nconst Learn = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [isFirstRender, setIsFirstRender] = useState<boolean>(true);\r\n    const allCards = useSelector((state: AppStateType) => state.cards.cards);\r\n    const cardToShow = useSelector((state: AppStateType) => state.learn.cardToShow);\r\n    const gradeSuccess = useSelector((state: AppStateType) => state.learn.updateGradeSuccess);\r\n    const gradeError = useSelector((state: AppStateType) => state.learn.isError);\r\n    const {packId} = useParams<RouteParamsType>();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log(\"use effect\")\r\n        if (isFirstRender) {\r\n            dispatch(getCards(packId));\r\n            setIsFirstRender(false);\r\n            console.log(\"first\")\r\n        }\r\n        if (allCards.length > 0) {\r\n            dispatch(getCardToShowSuccess(getCard(allCards)));\r\n            console.log(\"get card\")\r\n        }\r\n    }, [isFirstRender, packId, allCards, dispatch]);\r\n\r\n    const onSetGradeClick = (grade: number) => {\r\n        dispatch(setGrade(cardToShow._id, grade));\r\n    };\r\n\r\n    const showNextCard = () => {\r\n        dispatch(getCardToShowSuccess(getCard(allCards)));\r\n        setIsChecked(false);\r\n        dispatch(setGradeSuccess(false));\r\n        dispatch(setGradeError(false));\r\n    };\r\n\r\n    if (allCards.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <span>Question: {cardToShow.question}</span>\r\n            {\r\n                !isChecked\r\n                    ? <Button name={\"check answer\"} onClickFunc={() => setIsChecked(true)}/>\r\n                    : <div className={styles.answer}>\r\n                        <span>Answer: {cardToShow.answer}</span>\r\n                        <div>\r\n                            <Button name={\"didn't know\"} onClickFunc={() => onSetGradeClick(1)}/>\r\n                            <Button name={\"forgot\"} onClickFunc={() => onSetGradeClick(2)}/>\r\n                            <Button name={\"thought slowly\"} onClickFunc={() => onSetGradeClick(3)}/>\r\n                            <Button name={\"knew good\"} onClickFunc={() => onSetGradeClick(4)}/>\r\n                            <Button name={\"knew well\"} onClickFunc={() => onSetGradeClick(5)}/>\r\n                        </div>\r\n                        {gradeSuccess && <span style={{color: \"green\"}}>answer saved</span>}\r\n                        {gradeError && <span style={{color: \"red\"}}>some error</span>}\r\n                        <Button name={\"Next card\"} onClickFunc={showNextCard}/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Learn;","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport styles from \"./Routes.module.css\"\nimport Profile from \"../Profile/Profile\";\nimport Login from \"../Login/Login\";\nimport Register from \"../Register/Register\";\nimport ForgotPassword from \"../ForgotPassword/ForgotPassword\";\nimport MainTable from \"../TablePacks/TablePacks\";\nimport Cards from \"../Cards/Cards\";\nimport Learn from \"../Learn/Learn\";\n\nexport const PROFILE_PATH = \"/profile\";\nexport const LOGIN_PATH = \"/login\";\nexport const REGISTER_PATH = \"/register\";\nexport const FORGOT_PASSWORD_PATH = \"/forgot-password\";\nexport const PACKS_TABLE = \"/packs-table\";\nexport const CARDS_TABLE = `${PACKS_TABLE}/cards/:packId?`;\nexport const LEARN_CARD = \"/learn/:packId?\";\n\nconst Routes = () => {\n\n    return (\n        <div className={styles.routes}>\n            <Route path={PROFILE_PATH} render={() => <Profile/>}/>\n            <Route path={LOGIN_PATH} render={() => <Login/>}/>\n            <Route path={REGISTER_PATH} render={() => <Register/>}/>\n            <Route path={FORGOT_PASSWORD_PATH} render={() => <ForgotPassword/>}/>\n            <Route exact path={PACKS_TABLE} render={() => <MainTable/>}/>\n            <Route path={CARDS_TABLE} render={() => <Cards/>}/>\n            <Route path={LEARN_CARD} render={() => <Learn/>}/>\n        </div>\n    );\n};\n\nexport default Routes;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\"\r\nimport {PACKS_TABLE, FORGOT_PASSWORD_PATH, LOGIN_PATH, PROFILE_PATH, REGISTER_PATH} from \"../Routes/Routes\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <NavLink to={PROFILE_PATH}>Profile</NavLink>\r\n            <NavLink to={LOGIN_PATH}>Login</NavLink>\r\n            <NavLink to={REGISTER_PATH}>Register</NavLink>\r\n            <NavLink to={FORGOT_PASSWORD_PATH}>Forgot Password</NavLink>\r\n            <NavLink to={PACKS_TABLE}>Cards Table</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./main-components/Header/Header\";\nimport Routes from \"./main-components/Routes/Routes\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Routes/>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this columns and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nconst initialState = {};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state: initialStateType = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default profileReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport profileReducer from \"./profile-reducer\";\nimport loginReducer from \"./login-reducer\";\nimport registerReducer from \"./register-reducer\";\nimport forgotPasswordReducer from \"./forgot-password-reducer\";\nimport packsOfCardsReducer from \"./packs-reducer\";\nimport cardsReducer from \"./cards-reducer\";\nimport {learnReducer} from \"./learn-reducer\";\n\nconst rootReducer = combineReducers({\n    profile: profileReducer,\n    login: loginReducer,\n    register: registerReducer,\n    forgotPassword: forgotPasswordReducer,\n    packsOfCards: packsOfCardsReducer,\n    cards: cardsReducer,\n    learn: learnReducer\n});\n\ntype RootReducerType = typeof rootReducer;\nexport type AppStateType = ReturnType<RootReducerType>;\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/ui/App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './main/bll/store';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundStyle\":\"ModalWindowWith2Inputs_backgroundStyle__2uoQx\",\"main\":\"ModalWindowWith2Inputs_main__2nMLM\",\"forButton\":\"ModalWindowWith2Inputs_forButton__2_aGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__1ZrIg\",\"header\":\"Table_header__2qWCm\",\"rows\":\"Table_rows__3b0vG\",\"row\":\"Table_row__3oxbf\",\"cell\":\"Table_cell__2QXtC\"};"],"sourceRoot":""}